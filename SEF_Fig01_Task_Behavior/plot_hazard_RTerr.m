function [ varargout ] = plot_hazard_RTerr( behavData , varargin )
%UNTITLED2 Summary of this function goes here
%   Detailed explanation goes here

args = getopt(varargin, {{'monkey=',{'D'}}, {'hfFit=',[]}, {'sessHighlight=',[]}});
kkHighlight = args.sessHighlight;

if (numel(args.monkey) > 1)
  error('This function only fits single-subject data')
end

%**Note - These fits generated by first running this function for pFitHF
if strcmp(args.monkey{1}, 'D')
  hfScale = fittype('S * (1.595e-6*x.^2 + 1.013e-3*x + .1588)', 'independent',{'x'}, 'coefficients',{'S'}); %Da
else
  hfScale = fittype('S * (3.426e-6*x.^2 + 1.810e-3*x + .2254)', 'independent',{'x'}, 'coefficients',{'S'}); %Eu
end

kkKeep = ismember(behavData.Monkey, args.monkey);
behavData = behavData(kkKeep, :);
NUM_SESS = size(behavData,1);

NBIN = 16;
BINLIM_Acc  = [-400, 400];
BINLIM_Fast = [-400, 400];
rtLimAcc  = linspace(BINLIM_Acc(1), BINLIM_Acc(2), NBIN+1);     drtAcc = diff(rtLimAcc);    rtAccPlot  = rtLimAcc(1:NBIN)  + drtAcc(1);
rtLimFast = linspace(BINLIM_Fast(1), BINLIM_Fast(2), NBIN+1);   drtFast = diff(rtLimFast);  rtFastPlot = rtLimFast(1:NBIN) + drtFast(1);

idxFit = (rtAccPlot <= 0); %Only fit RT error data (not correct RT)

pdfAcc = NaN(NUM_SESS,NBIN);
pdfFast = pdfAcc;

for kk = 1:NUM_SESS
  RT = behavData.Sacc_RT{kk};
  
  %index by condition
  idxAcc = (behavData.Task_SATCondition{kk} == 1);
  idxFast = (behavData.Task_SATCondition{kk} == 3);
  
  rtAcc = RT(idxAcc & ~isnan(RT));    nAcc  = length(rtAcc);
  rtFast = RT(idxFast & ~isnan(RT));  nFast = length(rtFast);
  
  %get deadline for each condition
  dlineAcc =  nanmedian(behavData.Task_Deadline{kk}(idxAcc));
  dlineFast = nanmedian(behavData.Task_Deadline{kk}(idxFast));
  
  rtAcc  = rtAcc - dlineAcc;
  rtFast = rtFast - dlineFast;
  
  for bb = 1:NBIN
    idxBinFast = (rtFast > rtLimFast(bb)) & (rtFast <= rtLimFast(bb+1));
    idxBinAcc  = (rtAcc > rtLimAcc(bb))   & (rtAcc <= rtLimAcc(bb+1));
    
    pdfFast(kk,bb) = sum(idxBinFast) / nFast;
    pdfAcc(kk,bb)  = sum(idxBinAcc) / nAcc;
  end % for : RTbin(bb)
  
end % for : session(kk)

cdfFast = cumsum(pdfFast,2);
cdfAcc  = cumsum(pdfAcc,2);

sfFast = 1 - cdfFast;
sfAcc  = 1 - cdfAcc;

hfFast = pdfFast ./ sfFast;
hfAcc  = pdfAcc  ./ sfAcc;

%% Compute mean and SE across sessions
muPDF_Acc = mean(pdfAcc);     sePDF_Acc = std(pdfAcc)/sqrt(NUM_SESS);
muCDF_Acc = mean(cdfAcc);     seCDF_Acc = std(cdfAcc)/sqrt(NUM_SESS);
muSF_Acc = mean(sfAcc);       seSF_Acc  = std(sfAcc)/sqrt(NUM_SESS);
muHF_Acc = mean(hfAcc);       seHF_Acc  = std(hfAcc)/sqrt(NUM_SESS);
muPDF_Fast = mean(pdfFast);   sePDF_Fast = std(cdfFast)/sqrt(NUM_SESS);
muCDF_Fast = mean(cdfFast);   seCDF_Fast = std(cdfFast)/sqrt(NUM_SESS);
muSF_Fast = mean(sfFast);     seSF_Fast  = std(sfFast)/sqrt(NUM_SESS);
muHF_Fast = mean(hfFast);     seHF_Fast  = std(hfFast)/sqrt(NUM_SESS);

%% Fit line to mean hazard function across sessions, if not provided
if isempty(args.hfFit)
  pFitHF = polyfit(rtAccPlot(idxFit), muHF_Acc(idxFit), 2);
  varargout{1} = pFitHF;
  return
end

%% Scale best fit to single-session data
pFitScale = NaN(NUM_SESS,1);
for kk = 1:NUM_SESS
  tmp = fit(rtAccPlot(idxFit)', hfAcc(kk,idxFit)', hfScale, 'StartPoint',1.0);
  pFitScale(kk) = tmp.S;
end
if (nargout == 2); varargout{2} = pFitScale; end

%% Plotting
figure()

subplot(2,5,1); hold on
title('Probability density')
plot(rtFastPlot, pdfFast, '-', 'Color',[0 .7 0], 'LineWidth',1.25)
plot(rtFastPlot, muPDF_Fast, 'k-', 'LineWidth',1.5)
xlim(BINLIM_Fast)

subplot(2,5,2); hold on
title('Cumulative density')
plot(rtFastPlot, cdfFast, '-', 'Color',[0 .7 0], 'LineWidth',1.25)
plot(rtFastPlot, muCDF_Fast, 'k-', 'LineWidth',1.5)
xlim(BINLIM_Fast)

subplot(2,5,3); hold on
title('Survivor function')
plot(rtFastPlot, sfFast, '-', 'Color',[0 .7 0], 'LineWidth',1.25)
plot(rtFastPlot, muSF_Fast, 'k-', 'LineWidth',1.5)
xlim(BINLIM_Fast)

subplot(2,5,4); hold on
title('Hazard function')
plot(rtFastPlot, hfFast, '-', 'Color',[0 .7 0], 'LineWidth',1.25)
plot(rtFastPlot, muHF_Fast, 'k-', 'LineWidth',1.5)
xlim(BINLIM_Fast)

subplot(2,5,5); hold on
title('Hazard function')
plot(rtFastPlot, hfFast, '-', 'Color',[0 .7 0], 'LineWidth',1.25)
plot(rtFastPlot, muHF_Fast, 'k-', 'LineWidth',1.5)
ylabel('Hazard rate')
xlim([0 300])

subplot(2,5,6); hold on
plot(rtAccPlot, pdfAcc, '-', 'Color','r', 'LineWidth',1.25)
plot(rtAccPlot, muPDF_Acc, 'k-', 'LineWidth',1.5)
% shaded_error_bar(rtAccPlot, muPDF_Acc, sePDF_Acc, {'Color','r'}, 0);
xlabel('RT re. deadline (ms)')
xlim(BINLIM_Acc)

subplot(2,5,7); hold on
plot(rtAccPlot, cdfAcc, '-', 'Color','r', 'LineWidth',1.25)
plot(rtAccPlot, muCDF_Acc, 'k-', 'LineWidth',1.5)
% shaded_error_bar(rtAccPlot, muCDF_Acc, seCDF_Acc, {'Color','r'}, 0);
xlabel('RT re. deadline (ms)')
xlim(BINLIM_Acc)

subplot(2,5,8); hold on
plot(rtAccPlot, sfAcc, '-', 'Color','r', 'LineWidth',1.25)
plot(rtAccPlot, muSF_Acc, 'k-', 'LineWidth',1.5)
% shaded_error_bar(rtAccPlot, muSF_Acc, seSF_Acc, {'Color','r'}, 0);
xlabel('RT re. deadline (ms)')
xlim(BINLIM_Acc)

subplot(2,5,9); hold on
plot(rtAccPlot, hfAcc, '-', 'Color','r', 'LineWidth',1.25)
plot(rtAccPlot, muHF_Acc, 'k-', 'LineWidth',1.5)
% plot(rtAccPlot, polyval(args.hfFit, rtAccPlot), '-', 'Color',.5*ones(1,3), 'LineWidth',1.5)
% shaded_error_bar(rtAccPlot, muHF_Acc, seHF_Acc, {'Color','r'}, 0);
xlabel('RT re. deadline (ms)')
xlim(BINLIM_Acc)

subplot(2,5,10); hold on
plot(rtAccPlot, hfAcc, '-', 'Color','r', 'LineWidth',1.25)
if ~isempty(kkHighlight)
  title(behavData.Task_Session{kkHighlight})
  plot(rtAccPlot, hfAcc(kkHighlight,:), 'k-', 'LineWidth',1.5)
else
  plot(rtAccPlot, muHF_Acc, 'k-', 'LineWidth',1.5)
%   plot(rtAccPlot, polyval(args.hfFit, rtAccPlot), '-', 'Color',.5*ones(1,3), 'LineWidth',1.5)
end
xlabel('RT re. deadline (ms)')
ylabel('Hazard rate')
xlim([-300 0])

ppretty([12,2])

end % fxn : plot_hazard_RTerr()

